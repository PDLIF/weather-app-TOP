{"version":3,"file":"main.js","mappings":"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","sources":["webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/global","webpack://weather-app/webpack/runtime/publicPath","webpack://weather-app/./src/weatherData.js","webpack://weather-app/./src/navigation.js","webpack://weather-app/./src/mp3.js","webpack://weather-app/./src/theme-chooser.js","webpack://weather-app/./src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import sunBigIcon from './assets/icons/sun-big.svg';\nimport moonBigIcon from './assets/icons/moon-big.svg';\n\nimport sunSmallIcon from \"./assets/icons/sun-small.svg\";\nimport moonSmallIcon from \"./assets/icons/moon-small.svg\";\n\nexport const weatherData = (() => {\n    const searchField = document.querySelector('.search-input');\n    const searchBtn = document.querySelector('.search-btn');\n    const weatherDataPanel = document.querySelector('.weather-data');\n    const errorMessage = document.querySelector('.error-message');\n\n    // Fetching weather data function\n\n    const getWeather = async (location) => {\n        try {\n            const apiKey = 'APXATEEFMHYTLYK9HZNAQ6XM9';\n            const url = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?unitGroup=metric&key=${apiKey}&include=hours,current&contentType=json`;\n\n            weatherDataPanel.classList.add('pending');\n            \n            const response = await fetch(url);\n\n            if (!response.ok) {\n                throw new Error(`Error: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            console.log('Weather Data', data);\n\n            weatherDataPanel.classList.remove('pending');\n\n            updateHeaderWeather(data);\n            updateHourlyForecast(data);\n            updateDailyForecast(data);\n            updateWindInfo(data);\n            updateSunInfo(data);\n            updatePressureInfo(data);\n        } catch (error) {\n            console.log('Failed to fetch weather data: ', error);\n            weatherDataPanel.classList.remove('pending');\n            showError();\n        }\n    };\n\n\n\n    // Secondary functions\n\n    const updateHeaderWeather = (data) => {\n        const locationName = document.querySelector('.location-name');\n        const temperatureValue = document.querySelector('#temperature');\n        const timeOfDayIcon = document.querySelector('#time-of-day-icon');\n        const timeOfDay = document.querySelector('#time-of-day-value');\n        \n        const highestTempHeader = document.querySelector('.temperatures-range > .highest > .value');\n        const lowestTempHeader = document.querySelector('.temperatures-range > .lowest > .value');\n        \n        const today = data.days[0];\n                \n        const currentTime = data.currentConditions.datetime;\n        const sunrise = today.sunrise;\n        const sunset = today.sunset;\n\n        locationName.textContent = `${data.resolvedAddress}`;\n        temperatureValue.textContent = `${Math.round(today.temp)}°`;\n\n        const isDaytime = currentTime >= sunrise && currentTime <= sunset;\n\n        if (isDaytime) {\n            timeOfDay.textContent = 'Day';\n            timeOfDayIcon.src = sunBigIcon;\n        } else {\n            timeOfDay.textContent = 'Night';\n            timeOfDayIcon.src = moonBigIcon;\n        }\n\n        highestTempHeader.textContent = today.tempmax;\n        lowestTempHeader.textContent = today.tempmin;\n    }\n\n    const updateHourlyForecast = (data) => {\n        const nextHoursHtml = document.querySelectorAll('.next-hours-forecast .hour');\n        \n        const today = data.days[0];\n        const currentTime = data.currentConditions.datetime;\n        const sunrise = today.sunrise;\n        const sunset = today.sunset;\n\n        const allHours = today.hours; // Get the hour\n        const [hours, minutes, seconds] = currentTime.split(':');\n        const currentHour = `${hours}:00:00`;\n        const currentHourIndex = allHours.findIndex((hour) => hour.datetime === currentHour);\n        const nextHours = allHours.slice(currentHourIndex, currentHourIndex + 7);\n\n        nextHours.forEach((hour, index) => {\n            const time = allHours.indexOf(hour).toString(); // Get hour\n            const temp = Math.round(hour.temp); // Get temperature\n\n            if (nextHoursHtml[index]) {\n                nextHoursHtml[index].querySelector('.value').textContent = index === 0 ? 'Now' : time;\n                nextHoursHtml[index].querySelector('.hour-temperature').textContent = `${temp}°`;\n\n                const isDaytime = time >= sunrise && time <= sunset;\n\n                if (isDaytime) {\n                    nextHoursHtml[index].querySelector('img').src = sunSmallIcon;\n                } else {\n                    nextHoursHtml[index].querySelector('img').src = moonSmallIcon;\n                }\n            }\n        });\n    }\n\n    const updateDailyForecast = (data) => {\n        const days = document.querySelectorAll('.temperature');\n\n        const sevenDays = data.days.slice(0, 7);\n\n        sevenDays.forEach((day, index) => {\n            const date = new Date(day.datetime);\n            const dayName = date.toLocaleDateString('en-US', { weekday: 'long' });\n            const dayForecast = day.conditions;\n            const lowestTemp = day.tempmin;\n            const highestTemp = day.tempmax;\n\n            days[index].querySelector('.day').textContent = dayName;\n            days[index].querySelector('.day-forecast').textContent = dayForecast;\n            days[index].querySelector('.lowest').textContent = `${Math.round(lowestTemp)}°`;\n            days[index].querySelector('.highest').textContent = `${Math.round(highestTemp)}°`;\n        });\n    }\n\n    const updateWindInfo = (data) => {\n        const windspeedHtml = document.querySelector('.wind-info .wind-speed .value');\n        const winddirHrml = document.querySelector('.wind-info .additional-info .dir-value');\n        \n        const windspeed = data.currentConditions.windspeed;\n        const winddir = data.currentConditions.winddir;\n\n        windspeedHtml.textContent = windspeed;\n        winddirHrml.textContent = getWindDirection(winddir);\n\n        function getWindDirection(degrees) {\n            const directions = [\"North\", \"Northeast\", \"Eeast\", \"Southeast\", \"South\", \"Southwest\", \"West\", \"Northwest\"];\n            const index = Math.round(degrees / 45) % 8; // 360° / 8 = 45° per direction\n            return directions[index];\n        }\n    }\n\n    const updateSunInfo = (data) => {\n        const sunsetTime = data.currentConditions.sunset;\n        const sunriseTime = data.currentConditions.sunrise;\n\n        const [sunsetHours, sunsetMinutes, sunsetSeconds] = sunsetTime.split(':');\n        const [sunriseHours, sunriseMinutes, sunriseSeconds] = sunriseTime.split(':');\n\n        const sunsetTimeHtml = document.querySelector('.sunset-info .sunset-value');\n        const sunriseTimeHtml = document.querySelector('.sunset-info .sunrise-value');\n\n        sunsetTimeHtml.textContent = `${sunsetHours}:${sunsetMinutes}`;\n        sunriseTimeHtml.textContent = `${sunriseHours}:${sunriseMinutes}`;\n    }\n\n    const updatePressureInfo = (data) => {\n        const pressure = data.currentConditions.pressure.toString();\n        const humidity = data.currentConditions.humidity.toString();\n\n        const pressureHtml = document.querySelector('.pressure-value .value');\n        const humidityHtml = document.querySelector('.pressure-info .additional-info .hum-value');\n\n        pressureHtml.textContent = pressure;\n        humidityHtml.textContent = humidity;\n    }\n\n    const searchWeather = () => {\n        const location = searchField.value.trim();\n        if (location) { getWeather(location) }\n    }\n\n    const showError = () => {\n        errorMessage.classList.add('show');\n\n        // Remove the message after 3 seconds\n        setTimeout(() => {\n            errorMessage.classList.remove('show');\n        }, 3000);\n    }\n\n\n\n\n\n\n\n    // Event listeners\n\n    // searchField.addEventListener('keypress', (e) => {\n    //     if (e.key === 'Enter') { searchWeather() }\n    // });\n\n    // searchBtn.addEventListener('click', () => { searchWeather() });\n\n    return { searchWeather }\n})();","export const navigation = (() => {\n    const primaryNav = document.querySelector('#side-menu');\n    const navToggle = document.querySelector('.mobile-nav-toggle');\n\n    const body = document.querySelector('body');\n\n    navToggle.addEventListener('click', () => {\n        const visibility = primaryNav.getAttribute('data-visible');\n\n        if (visibility === 'false') {\n            primaryNav.setAttribute('data-visible', 'true');\n            navToggle.setAttribute('aria-expanded', 'true');\n\n            body.style.overflow = 'hidden';\n        } else if (visibility === 'true') {\n            primaryNav.setAttribute('data-visible', 'false');\n            navToggle.setAttribute('aria-expanded', 'false');\n\n            body.style.overflow = 'scroll';\n        }\n    });\n})();","\nimport mySong from './assets/mp3/aaa.mp3';\n\nexport const mp3Player = (() => {\n    const playerContainer = document.querySelector('.mp3-player');\n    const playBtn = document.querySelector('#play');\n    const audio = document.querySelector('#audio');\n    const volumeBar = document.querySelector('#volume');\n    const volumeContainer = document.querySelector('.volume-container');\n\n    const song = mySong;\n\n    audio.loop = true;\n    audio.volume = 0.3;\n    volumeBar.style.width = `${volume * 100}%`;\n\n    const songs = ['Aphex Twin - 3'];\n\n    let songIndex = 0;\n\n    let isDragging = false;\n\n    loadSong(songs[songIndex]);\n\n    function loadSong(song) {\n        audio.src = mySong;\n    }\n\n    function playSong() {\n        playerContainer.classList.add('play');\n        playBtn.querySelector('i.fas').classList.remove('fa-play');\n        playBtn.querySelector('i.fas').classList.add('fa-pause');\n\n        audio.play();\n    }\n\n    function pauseSong() {\n        playerContainer.classList.remove('play');\n        playBtn.querySelector('i.fas').classList.remove('fa-pause');\n        playBtn.querySelector('i.fas').classList.add('fa-play');\n\n        audio.pause();\n    }\n\n    function updateVolume(e) {\n        const volume = e.srcElement.volume\n        const volumePercent = volume * 100;\n        volumeBar.style.width = `${volumePercent}%`\n    }\n\n    function setVolume(e) {\n        const width = volumeContainer.clientWidth;\n        let clickX = e.offsetX;\n\n        if (e.type === \"mousemove\") {\n            clickX = e.clientX - volumeContainer.getBoundingClientRect().left;\n        }\n        \n        let newVolume = clickX / width;\n        newVolume = Math.max(0, Math.min(1, newVolume));\n\n        audio.volume = newVolume;\n    }\n\n    function startDragging(e) {\n        isDragging = true;\n        setVolume(e);\n    }\n\n    function stopDragging() {\n        isDragging = false;\n    }\n\n    function dragging(e) {\n        if (!isDragging) return;\n        setVolume(e);\n    }\n\n    return {\n        startDragging,\n        stopDragging,\n        dragging,\n        updateVolume,\n        pauseSong,\n        playSong,\n        loadSong\n    }\n})();\n","export const themeChooser = (() => {\n    const bodyElement = document.querySelector('body');\n\n    const themeBtn = document.querySelector('#themeBtn');\n    const themeMenu = document.querySelector('#themeMenu');\n    const themeMenuClose = document.querySelector('.theme-menu-close');\n\n\n\n\n    function openThemeMenu() {\n        themeMenu.setAttribute('aria-expanded', 'true');\n        themeBtn.style.display = 'none';\n        themeMenuClose.style.display = 'block';\n    }\n\n    function closeThemeMenu() {\n        themeMenu.setAttribute('aria-expanded', 'false');\n        themeBtn.style.display = 'flex';\n        themeMenuClose.style.display = 'none';\n    }\n\n    function changeTheme(event) {\n        const imgSrc = this.querySelector('img').src;\n        bodyElement.style.backgroundImage = `url(${imgSrc})`;\n    }\n\n    return {\n        changeTheme,\n        openThemeMenu,\n        closeThemeMenu\n    }\n})();\n","import './style.css'\nimport { weatherData } from \"./weatherData\";\nimport { navigation } from \"./navigation\";\nimport { mp3Player } from \"./mp3\";\nimport { themeChooser } from \"./theme-chooser\";\n\nconst addEventListeners = (() => {\n\n    // Weather panel's event listeners\n\n    const searchField = document.querySelector('.search-input');\n    const searchBtn = document.querySelector('.search-btn');\n\n    searchField.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') { weatherData.searchWeather() }\n    });\n\n    searchBtn.addEventListener('click', () => { weatherData.searchWeather() });\n\n\n\n\n\n\n    // MP3 player's event listeners\n\n    const playerContainer = document.querySelector('.mp3-player');\n    const volumeContainer = document.querySelector('.volume-container');\n    const audio = document.querySelector('#audio');\n    const playBtn = document.querySelector('#play');\n\n    volumeContainer.addEventListener('mousedown', mp3Player.startDragging);\n    document.addEventListener('mouseup', mp3Player.stopDragging);\n    document.addEventListener('mousemove', mp3Player.dragging);\n\n    audio.addEventListener('volumechange', () => {\n        volumeBar.style.width = `${audio.volume * 100}%`;\n        mp3Player.updateVolume();\n    });\n\n    playBtn.addEventListener('click', () => {\n        const isPlaying = playerContainer.classList.contains('play');\n        isPlaying ? mp3Player.pauseSong() : mp3Player.playSong();\n    });\n\n\n\n\n    // Theme chosser event listeners\n    \n    const themeOptions = document.querySelectorAll('.theme-option');\n    const navigationToggle = document.querySelector('.mobile-nav-toggle');\n    const themeMenuClose = document.querySelector('.theme-menu-close');\n\n    themeOptions.forEach((option, index) => {\n        option.addEventListener('click', themeChooser.changeTheme);\n    })\n\n    themeBtn.addEventListener('click', () => { themeChooser.openThemeMenu() });\n\n    navigationToggle.addEventListener('click', () => { themeChooser.closeThemeMenu() });\n\n    themeMenuClose.addEventListener('click', () => { themeChooser.closeThemeMenu() });\n\n    themeOptions.forEach(option => {\n        option.addEventListener('click', () => {\n            themeOptions.forEach(option => { option.classList.remove('chosen') });\n            option.classList.add('chosen');\n        });\n    });\n})();"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","weatherData","searchField","querySelector","weatherDataPanel","errorMessage","searchWeather","value","trim","async","url","classList","add","response","fetch","ok","status","data","json","console","log","remove","locationName","temperatureValue","timeOfDayIcon","timeOfDay","highestTempHeader","lowestTempHeader","today","days","currentTime","currentConditions","datetime","sunrise","sunset","textContent","resolvedAddress","Math","round","temp","tempmax","tempmin","updateHeaderWeather","nextHoursHtml","querySelectorAll","allHours","hours","minutes","seconds","split","currentHour","currentHourIndex","findIndex","hour","slice","forEach","index","time","indexOf","toString","isDaytime","updateHourlyForecast","day","dayName","Date","toLocaleDateString","weekday","dayForecast","conditions","lowestTemp","highestTemp","updateDailyForecast","windspeedHtml","winddirHrml","windspeed","winddir","degrees","updateWindInfo","sunsetTime","sunriseTime","sunsetHours","sunsetMinutes","sunsetSeconds","sunriseHours","sunriseMinutes","sunriseSeconds","sunsetTimeHtml","sunriseTimeHtml","updateSunInfo","pressure","humidity","pressureHtml","humidityHtml","updatePressureInfo","error","setTimeout","getWeather","primaryNav","navToggle","body","addEventListener","visibility","getAttribute","setAttribute","style","overflow","mp3Player","playerContainer","playBtn","audio","volumeBar","volumeContainer","loop","volume","width","isDragging","loadSong","song","setVolume","clientWidth","clickX","offsetX","type","clientX","getBoundingClientRect","left","newVolume","max","min","startDragging","stopDragging","dragging","updateVolume","volumePercent","srcElement","pauseSong","pause","playSong","play","themeChooser","bodyElement","themeBtn","themeMenu","themeMenuClose","changeTheme","event","imgSrc","backgroundImage","openThemeMenu","display","closeThemeMenu","searchBtn","key","contains","themeOptions","navigationToggle","option"],"sourceRoot":""}